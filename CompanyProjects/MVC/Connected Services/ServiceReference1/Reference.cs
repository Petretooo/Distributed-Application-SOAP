//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentDto", Namespace="http://schemas.datacontract.org/2004/07/ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class StudentDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MVC.ServiceReference1.NationalityDto NationalityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MVC.ServiceReference1.NationalityDto Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NationalityDto", Namespace="http://schemas.datacontract.org/2004/07/ApplicationServices.DTOs")]
    [System.SerializableAttribute()]
    public partial class NationalityDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        MVC.ServiceReference1.StudentDto[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.StudentDto[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentByID", ReplyAction="http://tempuri.org/IService1/GetStudentByIDResponse")]
        MVC.ServiceReference1.StudentDto GetStudentByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudentByID", ReplyAction="http://tempuri.org/IService1/GetStudentByIDResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.StudentDto> GetStudentByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostStudent", ReplyAction="http://tempuri.org/IService1/PostStudentResponse")]
        string PostStudent(MVC.ServiceReference1.StudentDto studentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostStudent", ReplyAction="http://tempuri.org/IService1/PostStudentResponse")]
        System.Threading.Tasks.Task<string> PostStudentAsync(MVC.ServiceReference1.StudentDto studentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutStudent", ReplyAction="http://tempuri.org/IService1/PutStudentResponse")]
        string PutStudent(MVC.ServiceReference1.StudentDto studentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutStudent", ReplyAction="http://tempuri.org/IService1/PutStudentResponse")]
        System.Threading.Tasks.Task<string> PutStudentAsync(MVC.ServiceReference1.StudentDto studentDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        string DeleteStudent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<string> DeleteStudentAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNationalities", ReplyAction="http://tempuri.org/IService1/GetNationalitiesResponse")]
        MVC.ServiceReference1.NationalityDto[] GetNationalities();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNationalities", ReplyAction="http://tempuri.org/IService1/GetNationalitiesResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.NationalityDto[]> GetNationalitiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostNationality", ReplyAction="http://tempuri.org/IService1/PostNationalityResponse")]
        string PostNationality(MVC.ServiceReference1.NationalityDto nationalityDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostNationality", ReplyAction="http://tempuri.org/IService1/PostNationalityResponse")]
        System.Threading.Tasks.Task<string> PostNationalityAsync(MVC.ServiceReference1.NationalityDto nationalityDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNationalityByID", ReplyAction="http://tempuri.org/IService1/GetNationalityByIDResponse")]
        MVC.ServiceReference1.NationalityDto GetNationalityByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNationalityByID", ReplyAction="http://tempuri.org/IService1/GetNationalityByIDResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.NationalityDto> GetNationalityByIDAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutNationality", ReplyAction="http://tempuri.org/IService1/PutNationalityResponse")]
        string PutNationality(MVC.ServiceReference1.NationalityDto nationalityDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutNationality", ReplyAction="http://tempuri.org/IService1/PutNationalityResponse")]
        System.Threading.Tasks.Task<string> PutNationalityAsync(MVC.ServiceReference1.NationalityDto nationalityDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNationality", ReplyAction="http://tempuri.org/IService1/DeleteNationalityResponse")]
        string DeleteNationality(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteNationality", ReplyAction="http://tempuri.org/IService1/DeleteNationalityResponse")]
        System.Threading.Tasks.Task<string> DeleteNationalityAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.ServiceReference1.IService1>, MVC.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC.ServiceReference1.StudentDto[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.StudentDto[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public MVC.ServiceReference1.StudentDto GetStudentByID(int id) {
            return base.Channel.GetStudentByID(id);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.StudentDto> GetStudentByIDAsync(int id) {
            return base.Channel.GetStudentByIDAsync(id);
        }
        
        public string PostStudent(MVC.ServiceReference1.StudentDto studentDto) {
            return base.Channel.PostStudent(studentDto);
        }
        
        public System.Threading.Tasks.Task<string> PostStudentAsync(MVC.ServiceReference1.StudentDto studentDto) {
            return base.Channel.PostStudentAsync(studentDto);
        }
        
        public string PutStudent(MVC.ServiceReference1.StudentDto studentDto) {
            return base.Channel.PutStudent(studentDto);
        }
        
        public System.Threading.Tasks.Task<string> PutStudentAsync(MVC.ServiceReference1.StudentDto studentDto) {
            return base.Channel.PutStudentAsync(studentDto);
        }
        
        public string DeleteStudent(int id) {
            return base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteStudentAsync(int id) {
            return base.Channel.DeleteStudentAsync(id);
        }
        
        public MVC.ServiceReference1.NationalityDto[] GetNationalities() {
            return base.Channel.GetNationalities();
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.NationalityDto[]> GetNationalitiesAsync() {
            return base.Channel.GetNationalitiesAsync();
        }
        
        public string PostNationality(MVC.ServiceReference1.NationalityDto nationalityDto) {
            return base.Channel.PostNationality(nationalityDto);
        }
        
        public System.Threading.Tasks.Task<string> PostNationalityAsync(MVC.ServiceReference1.NationalityDto nationalityDto) {
            return base.Channel.PostNationalityAsync(nationalityDto);
        }
        
        public MVC.ServiceReference1.NationalityDto GetNationalityByID(int id) {
            return base.Channel.GetNationalityByID(id);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.NationalityDto> GetNationalityByIDAsync(int id) {
            return base.Channel.GetNationalityByIDAsync(id);
        }
        
        public string PutNationality(MVC.ServiceReference1.NationalityDto nationalityDto) {
            return base.Channel.PutNationality(nationalityDto);
        }
        
        public System.Threading.Tasks.Task<string> PutNationalityAsync(MVC.ServiceReference1.NationalityDto nationalityDto) {
            return base.Channel.PutNationalityAsync(nationalityDto);
        }
        
        public string DeleteNationality(int id) {
            return base.Channel.DeleteNationality(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteNationalityAsync(int id) {
            return base.Channel.DeleteNationalityAsync(id);
        }
    }
}
