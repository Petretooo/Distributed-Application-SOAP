//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.CompanyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CompanyService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployees", ReplyAction="http://tempuri.org/IService1/GetEmployeesResponse")]
        ApplicationServices.DTOs.EmployeeDto[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployees", ReplyAction="http://tempuri.org/IService1/GetEmployeesResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeById", ReplyAction="http://tempuri.org/IService1/GetEmployeeByIdResponse")]
        ApplicationServices.DTOs.EmployeeDto GetEmployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEmployeeById", ReplyAction="http://tempuri.org/IService1/GetEmployeeByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto> GetEmployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostEmployee", ReplyAction="http://tempuri.org/IService1/PostEmployeeResponse")]
        string PostEmployee(ApplicationServices.DTOs.EmployeeDto employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostEmployee", ReplyAction="http://tempuri.org/IService1/PostEmployeeResponse")]
        System.Threading.Tasks.Task<string> PostEmployeeAsync(ApplicationServices.DTOs.EmployeeDto employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutEmployee", ReplyAction="http://tempuri.org/IService1/PutEmployeeResponse")]
        string PutEmployee(ApplicationServices.DTOs.EmployeeDto employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutEmployee", ReplyAction="http://tempuri.org/IService1/PutEmployeeResponse")]
        System.Threading.Tasks.Task<string> PutEmployeeAsync(ApplicationServices.DTOs.EmployeeDto employeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployee", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeResponse")]
        string DeleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployee", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployeesByName", ReplyAction="http://tempuri.org/IService1/GetAllEmployeesByNameResponse")]
        ApplicationServices.DTOs.EmployeeDto[] GetAllEmployeesByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllEmployeesByName", ReplyAction="http://tempuri.org/IService1/GetAllEmployeesByNameResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto[]> GetAllEmployeesByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagers", ReplyAction="http://tempuri.org/IService1/GetManagersResponse")]
        ApplicationServices.DTOs.ManagerDto[] GetManagers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagers", ReplyAction="http://tempuri.org/IService1/GetManagersResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto[]> GetManagersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagerById", ReplyAction="http://tempuri.org/IService1/GetManagerByIdResponse")]
        ApplicationServices.DTOs.ManagerDto GetManagerById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetManagerById", ReplyAction="http://tempuri.org/IService1/GetManagerByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto> GetManagerByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostManager", ReplyAction="http://tempuri.org/IService1/PostManagerResponse")]
        string PostManager(ApplicationServices.DTOs.ManagerDto managerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostManager", ReplyAction="http://tempuri.org/IService1/PostManagerResponse")]
        System.Threading.Tasks.Task<string> PostManagerAsync(ApplicationServices.DTOs.ManagerDto managerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutManager", ReplyAction="http://tempuri.org/IService1/PutManagerResponse")]
        string PutManager(ApplicationServices.DTOs.ManagerDto managerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutManager", ReplyAction="http://tempuri.org/IService1/PutManagerResponse")]
        System.Threading.Tasks.Task<string> PutManagerAsync(ApplicationServices.DTOs.ManagerDto managerDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteManager", ReplyAction="http://tempuri.org/IService1/DeleteManagerResponse")]
        string DeleteManager(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteManager", ReplyAction="http://tempuri.org/IService1/DeleteManagerResponse")]
        System.Threading.Tasks.Task<string> DeleteManagerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllManagersByName", ReplyAction="http://tempuri.org/IService1/GetAllManagersByNameResponse")]
        ApplicationServices.DTOs.ManagerDto[] GetAllManagersByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllManagersByName", ReplyAction="http://tempuri.org/IService1/GetAllManagersByNameResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto[]> GetAllManagersByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjects", ReplyAction="http://tempuri.org/IService1/GetProjectsResponse")]
        ApplicationServices.DTOs.ProjectDto[] GetProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjects", ReplyAction="http://tempuri.org/IService1/GetProjectsResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto[]> GetProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectById", ReplyAction="http://tempuri.org/IService1/GetProjectByIdResponse")]
        ApplicationServices.DTOs.ProjectDto GetProjectById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectById", ReplyAction="http://tempuri.org/IService1/GetProjectByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto> GetProjectByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostProject", ReplyAction="http://tempuri.org/IService1/PostProjectResponse")]
        string PostProject(ApplicationServices.DTOs.ProjectDto projectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostProject", ReplyAction="http://tempuri.org/IService1/PostProjectResponse")]
        System.Threading.Tasks.Task<string> PostProjectAsync(ApplicationServices.DTOs.ProjectDto projectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutProject", ReplyAction="http://tempuri.org/IService1/PutProjectResponse")]
        string PutProject(ApplicationServices.DTOs.ProjectDto projectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutProject", ReplyAction="http://tempuri.org/IService1/PutProjectResponse")]
        System.Threading.Tasks.Task<string> PutProjectAsync(ApplicationServices.DTOs.ProjectDto projectDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProject", ReplyAction="http://tempuri.org/IService1/DeleteProjectResponse")]
        string DeleteProject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProject", ReplyAction="http://tempuri.org/IService1/DeleteProjectResponse")]
        System.Threading.Tasks.Task<string> DeleteProjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProjectsByName", ReplyAction="http://tempuri.org/IService1/GetAllProjectsByNameResponse")]
        ApplicationServices.DTOs.ProjectDto[] GetAllProjectsByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProjectsByName", ReplyAction="http://tempuri.org/IService1/GetAllProjectsByNameResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto[]> GetAllProjectsByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectEmployees", ReplyAction="http://tempuri.org/IService1/GetProjectEmployeesResponse")]
        ApplicationServices.DTOs.ProjectEmployeeDto[] GetProjectEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectEmployees", ReplyAction="http://tempuri.org/IService1/GetProjectEmployeesResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto[]> GetProjectEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectEmployeeById", ReplyAction="http://tempuri.org/IService1/GetProjectEmployeeByIdResponse")]
        ApplicationServices.DTOs.ProjectEmployeeDto GetProjectEmployeeById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetProjectEmployeeById", ReplyAction="http://tempuri.org/IService1/GetProjectEmployeeByIdResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto> GetProjectEmployeeByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostProjectEmployee", ReplyAction="http://tempuri.org/IService1/PostProjectEmployeeResponse")]
        string PostProjectEmployee(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PostProjectEmployee", ReplyAction="http://tempuri.org/IService1/PostProjectEmployeeResponse")]
        System.Threading.Tasks.Task<string> PostProjectEmployeeAsync(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutProjectEmployee", ReplyAction="http://tempuri.org/IService1/PutProjectEmployeeResponse")]
        string PutProjectEmployee(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/PutProjectEmployee", ReplyAction="http://tempuri.org/IService1/PutProjectEmployeeResponse")]
        System.Threading.Tasks.Task<string> PutProjectEmployeeAsync(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProjectEmployee", ReplyAction="http://tempuri.org/IService1/DeleteProjectEmployeeResponse")]
        string DeleteProjectEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteProjectEmployee", ReplyAction="http://tempuri.org/IService1/DeleteProjectEmployeeResponse")]
        System.Threading.Tasks.Task<string> DeleteProjectEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProjectEmployeeByName", ReplyAction="http://tempuri.org/IService1/GetAllProjectEmployeeByNameResponse")]
        ApplicationServices.DTOs.ProjectEmployeeDto[] GetAllProjectEmployeeByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllProjectEmployeeByName", ReplyAction="http://tempuri.org/IService1/GetAllProjectEmployeeByNameResponse")]
        System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto[]> GetAllProjectEmployeeByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MVC.CompanyService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MVC.CompanyService.IService1>, MVC.CompanyService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ApplicationServices.DTOs.EmployeeDto[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public ApplicationServices.DTOs.EmployeeDto GetEmployeeById(int id) {
            return base.Channel.GetEmployeeById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto> GetEmployeeByIdAsync(int id) {
            return base.Channel.GetEmployeeByIdAsync(id);
        }
        
        public string PostEmployee(ApplicationServices.DTOs.EmployeeDto employeeDto) {
            return base.Channel.PostEmployee(employeeDto);
        }
        
        public System.Threading.Tasks.Task<string> PostEmployeeAsync(ApplicationServices.DTOs.EmployeeDto employeeDto) {
            return base.Channel.PostEmployeeAsync(employeeDto);
        }
        
        public string PutEmployee(ApplicationServices.DTOs.EmployeeDto employeeDto) {
            return base.Channel.PutEmployee(employeeDto);
        }
        
        public System.Threading.Tasks.Task<string> PutEmployeeAsync(ApplicationServices.DTOs.EmployeeDto employeeDto) {
            return base.Channel.PutEmployeeAsync(employeeDto);
        }
        
        public string DeleteEmployee(int id) {
            return base.Channel.DeleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteEmployeeAsync(int id) {
            return base.Channel.DeleteEmployeeAsync(id);
        }
        
        public ApplicationServices.DTOs.EmployeeDto[] GetAllEmployeesByName(string name) {
            return base.Channel.GetAllEmployeesByName(name);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.EmployeeDto[]> GetAllEmployeesByNameAsync(string name) {
            return base.Channel.GetAllEmployeesByNameAsync(name);
        }
        
        public ApplicationServices.DTOs.ManagerDto[] GetManagers() {
            return base.Channel.GetManagers();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto[]> GetManagersAsync() {
            return base.Channel.GetManagersAsync();
        }
        
        public ApplicationServices.DTOs.ManagerDto GetManagerById(int id) {
            return base.Channel.GetManagerById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto> GetManagerByIdAsync(int id) {
            return base.Channel.GetManagerByIdAsync(id);
        }
        
        public string PostManager(ApplicationServices.DTOs.ManagerDto managerDto) {
            return base.Channel.PostManager(managerDto);
        }
        
        public System.Threading.Tasks.Task<string> PostManagerAsync(ApplicationServices.DTOs.ManagerDto managerDto) {
            return base.Channel.PostManagerAsync(managerDto);
        }
        
        public string PutManager(ApplicationServices.DTOs.ManagerDto managerDto) {
            return base.Channel.PutManager(managerDto);
        }
        
        public System.Threading.Tasks.Task<string> PutManagerAsync(ApplicationServices.DTOs.ManagerDto managerDto) {
            return base.Channel.PutManagerAsync(managerDto);
        }
        
        public string DeleteManager(int id) {
            return base.Channel.DeleteManager(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteManagerAsync(int id) {
            return base.Channel.DeleteManagerAsync(id);
        }
        
        public ApplicationServices.DTOs.ManagerDto[] GetAllManagersByName(string name) {
            return base.Channel.GetAllManagersByName(name);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ManagerDto[]> GetAllManagersByNameAsync(string name) {
            return base.Channel.GetAllManagersByNameAsync(name);
        }
        
        public ApplicationServices.DTOs.ProjectDto[] GetProjects() {
            return base.Channel.GetProjects();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto[]> GetProjectsAsync() {
            return base.Channel.GetProjectsAsync();
        }
        
        public ApplicationServices.DTOs.ProjectDto GetProjectById(int id) {
            return base.Channel.GetProjectById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto> GetProjectByIdAsync(int id) {
            return base.Channel.GetProjectByIdAsync(id);
        }
        
        public string PostProject(ApplicationServices.DTOs.ProjectDto projectDto) {
            return base.Channel.PostProject(projectDto);
        }
        
        public System.Threading.Tasks.Task<string> PostProjectAsync(ApplicationServices.DTOs.ProjectDto projectDto) {
            return base.Channel.PostProjectAsync(projectDto);
        }
        
        public string PutProject(ApplicationServices.DTOs.ProjectDto projectDto) {
            return base.Channel.PutProject(projectDto);
        }
        
        public System.Threading.Tasks.Task<string> PutProjectAsync(ApplicationServices.DTOs.ProjectDto projectDto) {
            return base.Channel.PutProjectAsync(projectDto);
        }
        
        public string DeleteProject(int id) {
            return base.Channel.DeleteProject(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProjectAsync(int id) {
            return base.Channel.DeleteProjectAsync(id);
        }
        
        public ApplicationServices.DTOs.ProjectDto[] GetAllProjectsByName(string name) {
            return base.Channel.GetAllProjectsByName(name);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectDto[]> GetAllProjectsByNameAsync(string name) {
            return base.Channel.GetAllProjectsByNameAsync(name);
        }
        
        public ApplicationServices.DTOs.ProjectEmployeeDto[] GetProjectEmployees() {
            return base.Channel.GetProjectEmployees();
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto[]> GetProjectEmployeesAsync() {
            return base.Channel.GetProjectEmployeesAsync();
        }
        
        public ApplicationServices.DTOs.ProjectEmployeeDto GetProjectEmployeeById(int id) {
            return base.Channel.GetProjectEmployeeById(id);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto> GetProjectEmployeeByIdAsync(int id) {
            return base.Channel.GetProjectEmployeeByIdAsync(id);
        }
        
        public string PostProjectEmployee(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto) {
            return base.Channel.PostProjectEmployee(projectEmployeeDto);
        }
        
        public System.Threading.Tasks.Task<string> PostProjectEmployeeAsync(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto) {
            return base.Channel.PostProjectEmployeeAsync(projectEmployeeDto);
        }
        
        public string PutProjectEmployee(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto) {
            return base.Channel.PutProjectEmployee(projectEmployeeDto);
        }
        
        public System.Threading.Tasks.Task<string> PutProjectEmployeeAsync(ApplicationServices.DTOs.ProjectEmployeeDto projectEmployeeDto) {
            return base.Channel.PutProjectEmployeeAsync(projectEmployeeDto);
        }
        
        public string DeleteProjectEmployee(int id) {
            return base.Channel.DeleteProjectEmployee(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProjectEmployeeAsync(int id) {
            return base.Channel.DeleteProjectEmployeeAsync(id);
        }
        
        public ApplicationServices.DTOs.ProjectEmployeeDto[] GetAllProjectEmployeeByName(string name) {
            return base.Channel.GetAllProjectEmployeeByName(name);
        }
        
        public System.Threading.Tasks.Task<ApplicationServices.DTOs.ProjectEmployeeDto[]> GetAllProjectEmployeeByNameAsync(string name) {
            return base.Channel.GetAllProjectEmployeeByNameAsync(name);
        }
    }
}
